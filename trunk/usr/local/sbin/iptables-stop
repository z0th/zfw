#! /bin/sh
/etc/init.d/iptables stop

#  THIS SCRIPT NOW RUNS IPTABLES DIRECTLY.

#  #! /bin/sh
#  
#  DATESTAMP=`date +%m-%d-%y\ %H:%M%P`
#  
#  echo "   Reversing changes to /proc... "
#  # make sure routing is disabled. we dont need it.
#  /bin/echo "1" > /proc/sys/net/ipv4/ip_forward
#  /bin/echo "     IP forwarding enabled."
#  
#  # protect the system from DOS attacks, not avalible in recent versions of netfilter/iptables.
#  #echo "0" > /proc/sys/net/ipv4/tcp_syncookies
#  #/bin/echo "     TCP SYNcookies enabled."
#  
#  # drop ALL ping/echo traffic. this will foil standard ping scanning.
#  #/bin/echo "1" > /proc/sys/net/ipv4/icmp_echo_ignore_all
#  #/bin/echo "     ICMP echo enabled."
#  
#  # disable ICMP redirects. not acting as a router, we dont need to tell other routers where to send data.
#  /bin/echo "1" > /proc/sys/net/ipv4/conf/all/accept_redirects
#  /bin/echo "1" > /proc/sys/net/ipv4/conf/all/secure_redirects
#  /bin/echo "ICMP Redirects enabled."
#  
#  # ignore all broadcast pings. we dont really need to read these.
#  /bin/echo "0" > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
#  /bin/echo "     ICMP Broadcast enabled."
#  
#  # disable sorce routing. we dont want packets bounced from our interfaces to a trusted system.
#  /bin/echo "1" > /proc/sys/net/ipv4/conf/all/accept_source_route
#  /bin/echo "     Source routing enabled."
#  
#  # stop the logs with filling up with bogus bcast frames from broken routers.
#  echo "0" > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses
#  /bin/echo "     Accepting non-RFC1122 compliant router messages."
#  /bin/echo " "
#  
#  
#  # flush chain rules.
#  /bin/echo "   Flushing firewall chains... "
#  iptables -F
#  
#  # reset default policy to accept, flush does not take care of this.
#  /bin/echo "   Resetting poicies... "
#  iptables -P INPUT ACCEPT
#  iptables -P OUTPUT ACCEPT
#  iptables -P FORWARD DROP
#  
#  # give us the new rules. all INPUT and OUTPUT should have been set
#  # to ACCEPT. make the output numeric. 
#  iptables -L -n
#  
#  # tell us that firewall is now down.
#  echo ' '
#  echo '---- FIREWALL IS DOWN ----'
#  echo ' '
#  
#  # echo an info message out to the /var/log/firewall.log
#  echo "$DATESTAMP: ---- FIREWALL IS DOWN ----" >> /var/log/firewall.log
#  
